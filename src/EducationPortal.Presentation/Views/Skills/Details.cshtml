@using EducationPortal.Presentation.Extensions
@model EducationPortal.Presentation.ViewModels.Skills.SkillDetailsViewModel
@{
    ViewData["Title"] = "Skill details";
}

<h2 class="mb-2">@Model.Name</h2>

@if (!string.IsNullOrWhiteSpace(Model.Description))
{
    <div class="mb-3">
        <h5>Description</h5>
        <p class="mb-0">@Model.Description</p>
    </div>
}

<div class="mb-3">
    <h5>Attached to courses</h5>
    @if (Model.Courses?.Count > 0)
    {
        <ul class="list-unstyled mb-0">
            @foreach (var course in Model.Courses)
            {
                <li class="mb-1"><span class="badge bg-secondary">@course.Name</span></li>
            }
        </ul>
    }
    else
    {
        <span class="text-muted">Not attached to any course.</span>
    }
</div>

<div class="mt-3">
    @if (User.IsAuthenticated())
    {
        <a href="#"
           class="btn btn-success me-2"
           data-modal-url='@Url.Action("Edit", "Skills", new { id = Model.Id })'
           data-modal-title="Edit skill">Edit</a>

        <form asp-action="Delete"
              asp-route-id="@Model.Id"
              method="post"
              class="d-inline"
              asp-antiforgery="true"
              onsubmit="return confirm('Delete this skill?');">
            <button type="submit" class="btn btn-danger me-2">Delete</button>
        </form>
    }
    <a asp-action="Index" class="btn btn-outline-secondary">Back to list</a>
</div>